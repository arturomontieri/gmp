#!/bin/bash

prjfolder=/usr/local/gmp/
source ${prjfolder}/bin/gmp-env
myself=$(basename $0)
mlog=${prjfolder}/$logfolder/$myself.log
mpid=${prjfolder}/$pidfolder/$myself.pid

app="dbcron"
tmp=${app}_fh
#With the following statement fh will get the value decalred in gmp-env file
#for the variable $tmp, i.e. libqueue_fh
fh=${!tmp}
tmp=${app}_timeout
timeout=${!tmp}

echo '------- Starting  at ' `date` >>$mlog

#Check if process is a zombie, i.e. dead but running for more than $timeout (ddhhmmss)

# Get all PIDs for process name
processes="dbcron\|$app\|$myself"
procs=`ps aux | grep  $processes | grep 'bash\|python' | awk '{print $2}'`

# for each PID in PIDs array
for pid in $procs; do
    echo "WARNING: Found process $procs already running"
    more /proc/$procs/cmdline
    # get elapsed time in form mm:ss and remove ":" character
    # to make it easier to parse time 
    time=(`ps -o etime $pid | sed -e 's/[:-]//g'`)
    # get minutes from time
    min=${time[1]}
    # if proces runs 5 minutes then kill it
    if [ "$min" -gt $timeout ]; then
        #kill -9 $pid
        echo "WARNING Process $pid is running for more than $timeout; killing it" >>$mlog 2>>$mlog
        echo `ps -o etime $pid` >>$mlog 2>>$mlog
        kill $pid
    fi
done;


eval "exec $fh>$mpid"
eval "flock -x -w 1 -e $fh || exit 0" 

echo `date` " Calling  ${prjfolder}/bin/${app} " >> $mlog

alog=${prjfolder}/log/${app}.log
${prjfolder}/bin/${app} 1>>$alog 2>>$alog

#in case of interferometric pair discovery, dbcron should run each hour, added a sleep for not retriggering dbcron each 5 minutes
#echo `date` " Sleeping for 50 minutes " >> $mlog
#sleep 3000

echo `date` " Completed " >> $mlog

